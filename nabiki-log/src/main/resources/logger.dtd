<!--
  - Copyright (c) 2020-2020. Hongbao Chen <chenhongbao@outlook.com>
  -
  - Licensed under the  GNU Affero General Public License v3.0 and you may not use
  - this file except in compliance with the  License. You may obtain a copy of the
  - License at
  -
  -                    https://www.gnu.org/licenses/agpl-3.0.txt
  -
  - Permission is hereby  granted, free of charge, to any  person obtaining a copy
  - of this software and associated  documentation files (the "Software"), to deal
  - in the Software  without restriction, including without  limitation the rights
  - to  use, copy,  modify, merge,  publish, distribute,  sublicense, and/or  sell
  - copies  of  the Software,  and  to  permit persons  to  whom  the Software  is
  - furnished to do so, subject to the following conditions:
  -
  - The above copyright notice and this permission notice shall be included in all
  - copies or substantial portions of the Software.
  -
  - THE SOFTWARE  IS PROVIDED "AS  IS", WITHOUT WARRANTY  OF ANY KIND,  EXPRESS OR
  - IMPLIED,  INCLUDING BUT  NOT  LIMITED TO  THE  WARRANTIES OF  MERCHANTABILITY,
  - FITNESS FOR  A PARTICULAR PURPOSE AND  NONINFRINGEMENT. IN NO EVENT  SHALL THE
  - AUTHORS  OR COPYRIGHT  HOLDERS  BE  LIABLE FOR  ANY  CLAIM,  DAMAGES OR  OTHER
  - LIABILITY, WHETHER IN AN ACTION OF  CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  - OUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE
  - SOFTWARE.
  -->

<!-- DTD used by the java.util.logging.XMLFormatter -->
    <!-- This provides an XML formatted log message. -->

    <!-- The document type is "log" which consists of a sequence
    of record elements -->
    <!ELEMENT log (record*)>

    <!-- Each logging call is described by a record element. -->
    <!ELEMENT record (date, millis, sequence, logger?, level,
        class?, method?, thread?, message, key?, catalog?, param*, exception?)>

    <!-- Date and time when LogRecord was created in ISO 8601 format -->
    <!ELEMENT date (#PCDATA)>

    <!-- Time when LogRecord was created in milliseconds since
    midnight January 1st, 1970, UTC. -->
    <!ELEMENT millis (#PCDATA)>

    <!-- Unique sequence number within source VM. -->
    <!ELEMENT sequence (#PCDATA)>

    <!-- Name of source Logger object. -->
    <!ELEMENT logger (#PCDATA)>

    <!-- Logging level, may be either one of the constant
    names from java.util.logging.Level (such as "SEVERE"
    or "WARNING") or an integer value such as "20". -->
    <!ELEMENT level (#PCDATA)>

    <!-- Fully qualified name of class that issued
    logging call, e.g. "javax.marsupial.Wombat". -->
    <!ELEMENT class (#PCDATA)>

    <!-- Name of method that issued logging call.
    It may be either an unqualified method name such as
    "fred" or it may include argument type information
    in parenthesis, for example "fred(int,String)". -->
    <!ELEMENT method (#PCDATA)>

    <!-- Integer thread ID. -->
    <!ELEMENT thread (#PCDATA)>

    <!-- The message element contains the text string of a log message. -->
    <!ELEMENT message (#PCDATA)>

    <!-- If the message string was localized, the key element provides
    the original localization message key. -->
    <!ELEMENT key (#PCDATA)>

    <!-- If the message string was localized, the catalog element provides
    the logger's localization resource bundle name. -->
    <!ELEMENT catalog (#PCDATA)>

    <!-- If the message string was localized, each of the param elements
    provides the String value (obtained using Object.toString())
    of the corresponding LogRecord parameter. -->
    <!ELEMENT param (#PCDATA)>

    <!-- An exception consists of an optional message string followed
    by a series of StackFrames. Exception elements are used
    for Java exceptions and other java Throwables. -->
    <!ELEMENT exception (message?, frame+)>

    <!-- A frame describes one line in a Throwable backtrace. -->
    <!ELEMENT frame (class, method, line?)>

    <!-- an integer line number within a class's source file. -->
    <!ELEMENT line (#PCDATA)>